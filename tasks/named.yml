---
- name: "Named: Remove {{ bsd_named_conf_file }}"
  ansible.builtin.file:
    path: "{{ bsd_named_conf_file }}"
    state: absent
  when: bsd_named_conf_recreate|bool
  tags: bsd_named_conf

- name: "Named: Stat {{ bsd_named_conf_file }}"
  ansible.builtin.stat:
    path: "{{ bsd_named_conf_file }}"
  register: conf_file
  tags: bsd_named_conf

- name: "Named: Create {{ bsd_named_conf_file }}"
  when: not conf_file.stat.exists
  tags: bsd_named_conf

  block:
    - name: "Named: Copy sample to {{ bsd_named_conf_file }}"
      ansible.builtin.copy:
        remote_src: true
        src: "{{ bsd_named_conf_file }}.sample"
        dest: "{{ bsd_named_conf_file }}"
        mode: preserve
      when: bsd_named_conf_recreate_from_sample|bool

    - name: "Named: Create {{ bsd_named_conf_file }} from template"
      ansible.builtin.template:
        src: "{{ bsd_named_conf_recreate_template }}"
        dest: "{{ bsd_named_conf_file }}"
        validate: named-checkconf %s
      when: not bsd_named_conf_recreate_from_sample|bool

- name: "Named: Create BEGIN BLOCK options marker in {{ bsd_named_conf_file }}"
  ansible.builtin.lineinfile:
    path: "{{ bsd_named_conf_file }}"
    insertbefore: ^options {
    firstmatch: true
    line: // *** BEGIN ANSIBLE MANAGED BLOCK options ***
  when: not ansible_check_mode
  tags: bsd_named_conf

- name: "Named: Create END BLOCK options marker in {{ bsd_named_conf_file }}"
  ansible.builtin.lineinfile:
    path: "{{ bsd_named_conf_file }}"
    insertafter: ^};
    firstmatch: true
    line: // *** END ANSIBLE MANAGED BLOCK options ***
  when: not ansible_check_mode
  tags: bsd_named_conf

- name: "Named: Configure options in {{ bsd_named_conf_file }}"
  ansible.builtin.blockinfile:
    dest: "{{ bsd_named_conf_file }}"
    marker: // *** {mark} ANSIBLE MANAGED BLOCK options ***
    block: "{{ lookup('template', bsd_named_conf_options_template) }}"
    validate: named-checkconf %s
    backup: "{{ bsd_named_backup_conf }}"
  notify: reload named
  tags: bsd_named_conf_options

- name: "Named: Configure logging in {{ bsd_named_conf_file }}"
  ansible.builtin.blockinfile:
    dest: "{{ bsd_named_conf_file }}"
    marker: // *** {mark} ANSIBLE MANAGED BLOCK logging ***
    insertafter: EOF
    block: "{{ lookup('template', bsd_named_conf_log_template) }}"
    validate: named-checkconf %s
    backup: "{{ bsd_named_backup_conf }}"
  notify: reload named
  when: bsd_named_conf_log|bool
  tags: bsd_named_conf_logging

# EOF
